trigger:
  - main
  - develop

resources:
  - repo: self

variables:
  tag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: ''
  imageRepository: 'company_sql_server'
  containerRegistry: '< Container Registry DNS >'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile.Prod'
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build docker image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Build and push an image to Azure Container Registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

    #   - task: PublishPipelineArtifact@1
    #     inputs:
    #       artifactName: 'manifests'
    #       path: 'manifests'

  - stage: Deploy
    displayName: Deploy to kubernetes
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy job
        pool:
          vmImage: $(vmImageName)
        environment: 'angular.default' #customize with your environment
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifactName: 'manifests'
                    downloadPath: '$(System.ArtifactsDirectory)/manifests'

                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    namespace: $(k8sNamespace)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: deploy
                    namespace: $(k8sNamespace)
                    manifests: |
                      $(System.ArtifactsDirectory)/manifests/deployment.yml
                      $(System.ArtifactsDirectory)/manifests/service.yml
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)
